{
  "env": {
    "browser": false,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "jest"
  ],
  "ignorePatterns": ["**/*.js", "**/*.json"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "prettier",
    "prettier/@typescript-eslint"
  ],
  "rules": {
    "semi": "off",
    "@typescript-eslint/semi": ["error", "never"],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "public-static-field",
          "public-instance-field",
          "public-constructor",
          "private-static-field",
          "private-instance-field",
          "private-constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": [
      "error"
    ],
    "@typescript-eslint/array-type": ["error",
      {
        "default": "generic"
      }
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": ["error",
      {
        "ts-expect-error": true,
        "ts-ignore": true,
        "ts-nocheck": true,
        "ts-check": true
      }
    ],
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/ban-types": [ "error" ],
    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error", "1tbs"],
    "camelcase": "off",
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": ["error",
      {
        "before": false,
        "after": true
      }
    ],
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["error",
      {
        "allowPattern": "^[a-zA-Z]+(_[a-zA-Z]+)+$"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "indent": "off",
    "@typescript-eslint/indent": ["error", 2],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error",
      {
        "before": true,
        "after": true,
        "overrides": {}
      }
    ],
    "@typescript-eslint/member-delimiter-style": ["error",
      {
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        },
        "multiline": {
          "delimiter": "comma",
          "requireLast": true
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"], // only camelCase would be more appropriate
        "leadingUnderscore": "allow"
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"], // only camelCase would be more appropriate
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "method",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      }
    ],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": "error",
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": ["error"],
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": ["error",
      {
        "ignoreParameters": true
      }
    ],
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "off", // should but cannot be used because jquery uses this in callbacks
    "@typescript-eslint/no-invalid-void-type": "error",
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": ["error"],
    "@typescript-eslint/no-misused-promises": "warn", // should probably be on
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": ["off",
      {
        "ignoreRhs": true
      }
    ], // should probably be on
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unsafe-assignment": "off", // should be on!
    "@typescript-eslint/no-unsafe-call": "off", // should be on!
    "@typescript-eslint/no-unsafe-member-access": "off", // should be on!
    "@typescript-eslint/no-unsafe-return": "off", // should be on!
    "@typescript-eslint/no-untyped-public-signature": "off", // should probably be on
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": true,
        "allowedNames": ["that"]
      }
    ],
    "@typescript-eslint/no-throw-literal": ["error"],
    "@typescript-eslint/prefer-as-const": ["error"],
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "off",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/prefer-literal-enum-member": "warn",
    "@typescript-eslint/prefer-string-starts-ends-with": "off",
    "@typescript-eslint/prefer-ts-expect-error": ["error"],
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": "off", // should probably be on
    "@typescript-eslint/prefer-regexp-exec": "off",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/require-array-sort-compare": "error",
    "require-await": "off",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/restrict-template-expressions": "off", // should probably be on
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["error",
      {
        "anonymous": "always",
        "named": "never"
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/unbound-method": "error",
    "eol-last": [ "error", "always" ]
  }
}
